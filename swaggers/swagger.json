{
  "x-generator": "NSwag v14.0.0.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "My Title",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "FrontendRedirector"
        ],
        "operationId": "FrontendRedirector_Index",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/healthcheck": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "operationId": "HealthCheck_Index",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/terminal/livedevices/list": {
      "get": {
        "tags": [
          "TerminalService"
        ],
        "operationId": "TerminalService_getLiveDevices",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/terminal/deviceEvents": {
      "get": {
        "tags": [
          "TerminalService"
        ],
        "operationId": "TerminalService_subscribeOnDevice",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/consumer/consume": {
      "post": {
        "tags": [
          "Consumer"
        ],
        "operationId": "Consumer_consumeEvents",
        "requestBody": {
          "x-name": "batch",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsBatch"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DeviceInfo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "EventsBatch": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "isLive",
          "identification",
          "events",
          "projectKey"
        ],
        "properties": {
          "isLive": {
            "type": "boolean"
          },
          "identification": {
            "$ref": "#/components/schemas/Identification"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisteredEvent"
            }
          },
          "projectKey": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "Identification": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "minLength": 1
          },
          "userIdentification": {
            "type": "string"
          }
        }
      },
      "RegisteredEvent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "timestamp",
          "kind"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "minLength": 1
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "kind": {
            "$ref": "#/components/schemas/EventKind"
          },
          "textEvent": {
            "$ref": "#/components/schemas/TextEvent"
          },
          "stateEvent": {
            "$ref": "#/components/schemas/StateEvent"
          },
          "exceptionEvent": {
            "$ref": "#/components/schemas/ExceptionEvent"
          },
          "networkEvent": {
            "$ref": "#/components/schemas/NetworkEvent"
          },
          "storageEvent": {
            "$ref": "#/components/schemas/StorageEvent"
          },
          "tapEvent": {
            "$ref": "#/components/schemas/TapEvent"
          }
        }
      },
      "EventKind": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Text",
          "State",
          "Network",
          "Storage",
          "Tap",
          "Exception"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      },
      "TextEvent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "text"
        ],
        "properties": {
          "text": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "StateEvent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "stateName",
          "value"
        ],
        "properties": {
          "stateName": {
            "type": "string",
            "minLength": 1
          },
          "value": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "ExceptionEvent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "exception",
          "traces"
        ],
        "properties": {
          "exception": {
            "type": "string",
            "minLength": 1
          },
          "traces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TraceEntry"
            }
          }
        }
      },
      "TraceEntry": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "line",
          "column",
          "function",
          "path"
        ],
        "properties": {
          "line": {
            "type": "integer",
            "format": "int32"
          },
          "column": {
            "type": "integer",
            "format": "int32"
          },
          "function": {
            "type": "string",
            "minLength": 1
          },
          "path": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "NetworkEvent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "url",
          "statusCode",
          "requestHeaders",
          "responseHeaders"
        ],
        "properties": {
          "url": {
            "type": "string",
            "minLength": 1
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "requestHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "responseHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "requestPayload": {
            "$ref": "#/components/schemas/NetworkPayload"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/NetworkPayload"
          }
        }
      },
      "NetworkPayload": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/NetworkPayloadKind"
          },
          "formData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "json": {
            "type": "string"
          },
          "custom": {
            "type": "string"
          }
        }
      },
      "NetworkPayloadKind": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "FormData",
          "Json",
          "Custom"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "StorageEvent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string",
            "minLength": 1
          },
          "value": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "TapEvent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "x",
          "y"
        ],
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          }
        }
      }
    }
  }
}